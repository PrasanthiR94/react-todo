{"version":3,"sources":["components/TodoList.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","onClick","onSelect","id","text","Todo","useState","input","setInput","listItem","setListItem","deleteItem","console","log","prev","filter","arrElm","index","className","type","placeholder","onChange","e","target","value","map","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAUeA,MAPf,SAAkBC,GAEd,OACI,+BAAI,cAAC,IAAD,CAAUC,QAAS,WAAKD,EAAME,SAASF,EAAMG,OAAjD,IAA0DH,EAAMI,KAAhE,QCqCOC,MAvCf,WACI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAiCF,mBAAS,IAA1C,mBAAOG,EAAP,KAAkBC,EAAlB,KAWMC,EAAa,SAACR,GAChBS,QAAQC,IAAI,WACZH,GAAY,SAACI,GACT,OAAOA,EAAKC,QAAO,SAACC,EAAOC,GACvB,OAAOA,IAAUd,SAI7B,OACI,qBAAKe,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,2CACA,uBACA,uBAAOC,KAAK,OAAOC,YAAY,eAAgBC,SAtBtC,SAACC,GAClBd,EAASc,EAAEC,OAAOC,OAClBZ,QAAQC,IAAIN,MAqBJ,wBAAQN,QAnBE,WAClBS,GAAY,SAACI,GACT,MAAM,GAAN,mBAAWA,GAAX,CAAiBP,QAiBb,eACA,6BACKE,EAASgB,KAAI,SAACC,EAAKT,GACb,OAAO,cAAC,EAAD,CAAUb,KAAMsB,EAAkBvB,GAAIc,EAAOf,SAAUS,GAA5BM,c,KCtB9CU,MAPf,WACE,OACG,mCACA,cAAC,EAAD,OCIUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6ba9b7b8.chunk.js","sourcesContent":["import React from 'react';  \r\nimport MenuIcon from '@material-ui/icons/Menu'; \r\n\r\nfunction TodoList(props) {\r\n    \r\n    return (\r\n        <li><MenuIcon onClick={()=>{props.onSelect(props.id)}}/> {props.text} </li> \r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n","import React,{useState} from 'react';\r\nimport './Todo.css';\r\nimport TodoList from './TodoList';\r\n\r\nfunction Todo() {\r\n    const [input, setInput] = useState('');\r\n    const [listItem , setListItem] = useState([]);\r\n\r\n    const inputHandler = (e)=>{\r\n        setInput(e.target.value);\r\n        console.log(input);\r\n    } \r\n    const submitHandler = () => {\r\n        setListItem((prev)=>{\r\n            return [...prev, input ];\r\n        });\r\n    } \r\n    const deleteItem = (id) => {\r\n        console.log(\"deleted\");\r\n        setListItem((prev)=>{\r\n            return prev.filter((arrElm,index)=>{\r\n                return index !== id \r\n            })\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"main_div\">\r\n            <div className=\"center_div\">\r\n                <h1>Todo List</h1>\r\n                <br/>\r\n                <input type=\"text\" placeholder=\"Add new task\"  onChange={inputHandler} />\r\n                <button onClick={submitHandler}>+</button> \r\n                <ul>\r\n                    {listItem.map((item,index)=>{\r\n                           return <TodoList text={item} key={index} id={index} onSelect={deleteItem} />\r\n                    })}\r\n                   \r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import './App.css';\nimport React from 'react'; \nimport Todo from './components/Todo';\nimport { Fragment } from 'react/cjs/react.production.min';\n\nfunction App() {\n  return (\n     <> \n     <Todo/>\n     </>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}